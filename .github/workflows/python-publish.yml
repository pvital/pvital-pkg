# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish new version

on:
  push:
    tags:
      - v0.*

jobs:
  version-check:
    name: Check version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get source version
        run: echo "VERSION=$(grep "^__version__"  src/pvital_pkg/version.py | cut -d "=" -f 2 | xargs)" >> $GITHUB_ENV
      - name: Check source version with tagged version
        run: |
          if [ 'v$VERSION' != ${{ github.ref_name }} ]
            echo "::error title=MISMATCH VERSIONS::The src version ($VERSION) is different from tag version(${{ github.ref_name }})."
            exit 1
    
  build:
    name: Build package
    runs-on: ubuntu-latest
    needs:
      - version-check
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - name: Install pypa/build
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions-${{ github.ref_name }}
          path: dist/

  github-release:
    name: Release on GitHub
    runs-on: ubuntu-latest
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
    needs: 
      - build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions-${{ github.ref_name }}
          path: dist/
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          dist/**
          --repo '${{ github.repository }}'
          --title '${{ github.ref_name }}'
          --generate-notes
          --latest
          --verify-tag

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pvital-pkg
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions-${{ github.ref_name }}
          path: dist/
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
